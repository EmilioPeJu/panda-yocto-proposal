#!/bin/sh

# Make sure dynamic libraries are findable
/sbin/ldconfig
set -x

# proc, sys and dev were already mounted by the init script
mkdir -p /tmp
mount -t tmpfs tmpfs /tmp

# This is called if something goes horribly wrong.
panic()
{
    echo >&2 "$@"
    echo >&2 Unable to continue
    exec /bin/sh
}

resize_sdcard()
{
    mkdir -p /tmp/boot/
    cp -r /boot/* /tmp/boot/
    mkdir -p /mnt
    mount /dev/mmcblk0p3 /mnt
    cp /mnt/* /tmp/boot/
    umount /mnt &&
    umount /boot &&
    {
        cat <<EOF | sed 's/ *#.*//' | fdisk /dev/mmcblk0
o # create new partition table
n # create new partition
p # primary
1 # number 1
  # from sd card start
  # to sd card end
t # type
1 # of partition 1
c # fat32
p # print
w # write
EOF
    } &&
    mkfs.vfat -v -n boot /dev/mmcblk0p1 &&
    mount /dev/mmcblk0p1 /boot &&
    mv /tmp/boot/* /boot/  ||
        panic 'Failed to resize sdcard'
}

create_changes_image()
{
    dd if=/dev/zero of=/boot/changes.ext4 count=128 bs=1M
    # the options are needed to prevent an error at mount time because of
    # unsupported WRITE_ZEROES operation by underlying fat32 system
    mkfs.ext4 -E lazy_itable_init=0,lazy_journal_init=0 -F /boot/changes.ext4
}

while [ ! -e /dev/mmcblk0p1 ]; do
    echo "Waiting for /dev/mmcblk0p1 to appear"
    sleep 1
done

mkdir -p /boot
mount -t vfat /dev/mmcblk0p1 /boot  ||
    panic 'Unable to mount boot partition!'

[ -b /dev/mmcblk0p3 ] && resize_sdcard
[ -e /boot/packages.ext4 ] || panic 'Rootfs not found'
[ ! -e /boot/changes.ext4 ] && create_changes_image
mkdir -p /tmp/packages /tmp/changes
mount -t ext4 /boot/packages.ext4 /tmp/packages/ ||
    panic 'Unable to mount packages'
mount -o remount,ro /tmp/packages/
mount -t ext4 /boot/changes.ext4 /tmp/changes ||
    panic 'Unable to mount changes'
mkdir -p /tmp/changes/upper /tmp/changes/work
mount -t overlay -o lowerdir=/tmp/packages/,upperdir=/tmp/changes/upper/,workdir=/tmp/changes/work/ overlay /rootfs ||
    panic 'Unable to mount rootfs'
mkdir -p /rootfs/boot /rootfs/proc /rootfs/sys /rootfs/dev /rootfs/tmp
mount --move /boot /rootfs/boot
mount --move /proc /rootfs/proc
mount --move /sys /rootfs/sys
mount --move /dev /rootfs/dev
# this also move the mounts underneath /tmp so that it can be accessed from the
# new root
mount --move /tmp /rootfs/tmp
exec switch_root -c /dev/console /rootfs/ /sbin/init
